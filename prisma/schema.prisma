generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model saddle_data_items {
  itemID Int @id
  itemName String
  itemQuality Int
  itemClass Int
  itemSubClass Int
}

model extended_auction_data_items {
  auctionHouseId Int
  itemId         Int
  petSpeciesId   Int?
  minBuyout      Decimal @db.Decimal
  quantity       Int
  marketValue    Decimal @db.Decimal
  historical     Decimal @db.Decimal
  numAuctions    Int
  name           String
  regionId       Int
  realmId        Int
  regionPrefix   String
  gameVersion    String
  lastModified   Int
  type           String
  itemMediaUrl   String
  itemName       String
  itemQuality    String
  itemClass      String
  itemSubClass   String

  @@id([auctionHouseId, itemId], map: "extended_auction_data_items_auctionHouseId_itemId_pk")
}

model favourite_extended_auction_data_items {
  id             Int   @id @default(autoincrement())
  userId         Int
  itemId         Int
  auctionHouseId Int
  priceAlert     Int
  users          users @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "favourite_extended_auction_data_items_userId_users_id_fk")
}

model item_media_caches {
  id           Int    @id @default(autoincrement())
  itemId       Int
  itemMediaUrl String
}

model users {
  id                                    Int                                     @id @default(autoincrement())
  email                                 String                                  @unique(map: "users_email_unique") @db.VarChar(255)
  password                              String                                  @db.VarChar(255)
  otpcode                               String?                                 @db.VarChar(255)
  favourite_extended_auction_data_items favourite_extended_auction_data_items[]
}
